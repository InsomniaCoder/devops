apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: resourcenamespacelabelconstraint
spec:
  crd:
    spec:
      names:
        kind: ResourceNamespaceLabelConstraint
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
      
        package insomniacoder.constraints

        violation[{"msg": msg}] {
          
          createdLabels := input.review.object.metadata.labels
          createdObjectNS := input.review.object.metadata.namespace

          defaultNSLabels := data.inventory.cluster["v1"].Namespace[createdObjectNS].metadata.labels
          nsLabels := object.remove(defaultNSLabels,{"kubernetes.io/metadata.name"})
          
          # check if created object has all the labels namespace has
         
          # iterate keys
          objectLabelKeys := { label | createdLabels[label] }
          namespaceLabelKeys := { label | nsLabels[label] }

          objectLabelCount := count(objectLabelKeys)
          nsLabelCount := count(namespaceLabelKeys)

          # if object contain all labels, all ns keys must be removed. if it equals mean it contains all
          count(objectLabelKeys - namespaceLabelKeys) != (objectLabelCount - nsLabelCount)

          msg := sprintf("Created <%v> does not contain all labels in Namespace <%v>\n namespace labels: <%v>, resource labels: <%v>", [input.review.kind.kind, createdObjectNS, namespaceLabelKeys, objectLabelKeys])
        }